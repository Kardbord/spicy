// Copyright (c) 2020 by the Zeek Project. See LICENSE for details.
///
/// Implementation of main() which directly executes Main::run().
///

#include <getopt.h>

#include <iostream>

#include <hilti/rt/libhilti.h>

static struct option long_options[] = {{nullptr, 0, nullptr, 0}};

static void usage(const char* prog) {
    std::cerr << hilti::rt::
            fmt("%s: This is a default entry point provided by the HILTI runtime library that initializes any "
                "available modules.\n",
                prog);
}

namespace hilti {
int main(int argc, char** argv);
} // namespace hilti

// Top-level entry point generated by HILTI compiler. We declare our
// implementation weak so any external implementation will override it.
__attribute__((weak)) int hilti::main(int argc, char** argv) {
    auto config = hilti::rt::configuration::get();

    while ( true ) {
        int c = getopt_long(argc, argv, "h", long_options, nullptr);

        if ( c == -1 )
            break;

        switch ( c ) { // NOLINT
            case 'h': usage(argv[0]); break;
            case '?': usage(argv[0]); exit(1);
            default: usage(argv[0]); exit(1);
        }
    }

    if ( optind != argc )
        usage(argv[0]);

    hilti::rt::configuration::set(config);
    hilti::rt::init();

    return 0;
}

__attribute__((weak)) int main(int argc, char** argv) { return hilti::main(argc, argv); }
