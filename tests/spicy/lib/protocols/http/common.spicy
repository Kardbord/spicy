# @TEST-EXEC: ${SPICYC} %INPUT -j -o common.hlto

# @TEST-EXEC: cat %DIR/requests.dat | spicy-driver common.hlto -p HTTP::Requests >>requests
# @TEST-EXEC: cat %DIR/requests.dat | spicy-dump common.hlto -p HTTP::Request >>requests
# @TEST-EXEC: btest-diff requests

# @TEST-EXEC: cat %DIR/reply-chunked.dat | spicy-driver common.hlto -p HTTP::Replies >>reply-chunked
# @TEST-EXEC: cat %DIR/reply-chunked.dat | spicy-dump common.hlto -p HTTP::Reply >>requests
# @TEST-EXEC: btest-diff reply-chunked

# @TEST-EXEC: cat %DIR/reply-chunked-trailer.dat | spicy-driver common.hlto -p HTTP::Replies >reply-chunked-trailer
# @TEST-EXEC: cat %DIR/reply-chunked-trailer.dat | spicy-dump common.hlto -p HTTP::Reply >>reply-chunked-trailer
# @TEST-EXEC: btest-diff reply-chunked-trailer

# @TEST-EXEC: cat %DIR/reply-content-length.dat | spicy-driver common.hlto -p HTTP::Replies >>reply-content-length
# @TEST-EXEC: cat %DIR/reply-content-length.dat | spicy-dump common.hlto -p HTTP::Reply >>reply-content-length
# @TEST-EXEC: btest-diff reply-content-length

# @TEST-EXEC: cat %DIR/reply-eod.dat | spicy-driver common.hlto -p HTTP::Replies >>reply-eod
# @TEST-EXEC: cat %DIR/reply-content-length.dat | spicy-dump common.hlto -p HTTP::Reply >>reply-content-length
# @TEST-EXEC: btest-diff reply-eod

# @TEST-EXEC: cat %DIR/reply-multipart.dat | spicy-driver common.hlto -p HTTP::Replies >>reply-multipart
# @TEST-EXEC: cat %DIR/reply-multipart.dat | spicy-dump common.hlto -p HTTP::Reply >>reply-multipart
# @TEST-EXEC: btest-diff reply-multipart


module Test;

import HTTP from protocols;

on HTTP::Request::%done {
    print self;
    }

on HTTP::Reply::%done {
    print self;
    }

public type EatAll = unit {
    %mime-type = "*";
    data: bytes &eod { print "I ate it all:", self.data; }
};
